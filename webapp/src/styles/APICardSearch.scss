// APICardSearch Component Styles

.search-form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  // Horizontal layout for top search bar
  .top-search-layout & {
    background: none;
    padding: 0;
    
    .search-header {
      display: none; // Hide header in horizontal layout
    }
    
    .search-inputs-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
      margin-bottom: 1rem;
      
      @media (max-width: 768px) {
        grid-template-columns: 1fr;
      }
    }
      .search-input-container {
      margin-bottom: 1rem;
      
      .filter-label {
        display: block;
        margin-bottom: 0.5rem;
        color: white;
        font-weight: 500;
        font-size: 0.875rem;
      }
      
      .search-icon {
        color: rgba(255, 255, 255, 0.8);
      }
      
      .base-input {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        
        &::placeholder {
          color: rgba(255, 255, 255, 0.7);
        }
        
        &:focus {
          background: rgba(255, 255, 255, 0.15);
          border-color: rgba(255, 255, 255, 0.4);
          box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.1);
        }
      }
    }
    
    .filters-section {
      display: grid;
      grid-template-columns: 1fr 1fr auto;
      gap: 2rem;
      align-items: start;
      
      @media (max-width: 768px) {
        grid-template-columns: 1fr;
        gap: 1rem;
      }
    }
    
    .filter-group {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      
      .filter-label {
        margin: 0;
        white-space: nowrap;
        color: white;
        font-weight: 500;
        font-size: 0.875rem;
      }
      
      .filter-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        
        .filter-button {
          background: rgba(255, 255, 255, 0.1);
          border: 1px solid rgba(255, 255, 255, 0.2);
          color: rgba(255, 255, 255, 0.9);
          
          &:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.4);
          }
          
          &.active {
            background: rgba(255, 255, 255, 0.9);
            border-color: white;
            color: #667eea;
          }
        }
      }
      
      .cost-range {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        
        .cost-input {
          width: 4rem;
          background: rgba(255, 255, 255, 0.1);
          border: 1px solid rgba(255, 255, 255, 0.2);
          color: white;
          
          &::placeholder {
            color: rgba(255, 255, 255, 0.7);
          }
          
          &:focus {
            background: rgba(255, 255, 255, 0.15);
            border-color: rgba(255, 255, 255, 0.4);
            box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1);
          }
        }
        
        .cost-separator {
          color: rgba(255, 255, 255, 0.8);
        }
      }
      
      .base-input {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        
        &::placeholder {
          color: rgba(255, 255, 255, 0.7);
        }
        
        &:focus {
          background: rgba(255, 255, 255, 0.15);
          border-color: rgba(255, 255, 255, 0.4);
          box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.1);
        }
      }
    }
    
    .action-buttons {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      align-self: end;
      
      .search-button,
      .scrape-button,
      .clear-button {
        background: rgba(255, 255, 255, 0.9);
        color: #667eea;
        border: 1px solid rgba(255, 255, 255, 0.2);
        font-weight: 600;
        white-space: nowrap;
        
        &:hover:not(:disabled) {
          background: white;
          transform: translateY(-1px);
          box-shadow: 0 4px 12px rgba(255, 255, 255, 0.2);
        }
        
        &:disabled {
          background: rgba(255, 255, 255, 0.5);
          color: rgba(102, 126, 234, 0.7);
        }
      }
    }
    
    // Status messages in horizontal layout
    .status-ready,
    .status-error,
    .status-success {
      grid-column: 1 / -1;
      margin-top: 1rem;
      margin-bottom: 0;
      background: rgba(255, 255, 255, 0.9);
      border-radius: 6px;
    }
  }
}

.search-header {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  .search-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: $text-dark;
    margin: 0;
  }

  .search-subtitle {
    font-size: 0.875rem;
    color: $text-light;
    margin: 0;
  }
}

.loading-indicator {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: $primary-color;

  .loading-spinner {
    width: 1rem;
    height: 1rem;
    border: 2px solid #e5e7eb;
    border-top: 2px solid $primary-color;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
}

.status {
  &-ready {
    background: #ecfdf5;
    border: 1px solid #d1fae5;
    border-radius: $border-radius-sm;
    padding: 0.75rem;
    font-size: 0.875rem;
    color: #065f46;
  }

  &-error {
    background: #fef2f2;
    border: 1px solid #fecaca;
    border-radius: $border-radius-sm;
    padding: 0.75rem;
    font-size: 0.875rem;
    color: #991b1b;
  }
}

.search-input-container {
  position: relative;
  width: 100%;

  .search-icon {
    position: absolute;
    left: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    width: 1.25rem;
    height: 1.25rem;
    color: $text-light;
    pointer-events: none;
  }
}

.filters-section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.filter-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  .filter-label {
    font-size: 0.875rem;
    font-weight: 500;
    color: $text-medium;
  }

  .filter-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;

    .filter-button {
      padding: 0.25rem 0.75rem;
      font-size: 0.75rem;
      border: 1px solid $border-medium;
      border-radius: $border-radius-full;
      background: white;
      color: $text-light;
      cursor: pointer;
      transition: all 0.2s;

      &:hover {
        border-color: $text-light;
      }

      &.active {
        background: $primary-light;
        border-color: $primary-color;
        color: $primary-dark;
      }
    }
  }
}

.cost-range {
  display: flex;
  align-items: center;
  gap: 0.5rem;

  .cost-input {
    width: 5rem;
    padding: 0.25rem 0.5rem;
    border: 1px solid $border-medium;
    border-radius: $border-radius-sm;
    font-size: 0.875rem;
  }

  .cost-separator {
    color: $text-light;
    font-size: 0.875rem;
  }
}

.checkbox-group {
  display: flex;
  align-items: center;
  gap: 0.5rem;

  .checkbox {
    width: 1rem;
    height: 1rem;
    accent-color: $primary-color;
  }

  .checkbox-label {
    font-size: 0.875rem;
    color: $text-medium;
  }
}

.search-button {
  @extend %btn-base;
  color: white;
  background: $primary-color;
  border: none; // Override base border

  &:hover {
    background: $primary-dark;
    // transform and box-shadow are now inherited from %btn-base
  }

  &:disabled {
    background: $text-light; // Specific disabled background
    // opacity from %btn-base also applies
  }

  .search-button-icon {
    width: 1rem;
    height: 1rem;
  }
}

.scrape-button {
  @extend %btn-base;
  color: white;
  background: $primary-color; // Styled like the search button
  border: none; // Override base border

  &:hover {
    background: $primary-dark;
    // transform and box-shadow are now inherited from %btn-base
  }

  &:disabled {
    background: $text-light; // Specific disabled background
    // opacity from %btn-base also applies
  }

  // Assuming icons (like Heroicons) will size correctly or be sized via props/SVG attributes.
  // The 'gap' from %btn-base will handle spacing if an icon is a direct child.
}

.clear-button {
  @extend %btn-base;
  color: $text-medium;
  background: white;
  border: 1px solid $border-medium; // Override base border

  &:hover {
    background: $background-light;
    border-color: $text-light;
    // Override hover effects from %btn-base that are not desired for this button
    transform: none;
    box-shadow: none;
  }
  // Inherits base disabled state (opacity, cursor, no transform/shadow)
  // If a specific background for disabled is needed, it can be added here:
  // &:disabled {
  //   background-color: $some-disabled-grey-for-clear-button;
  // }
}
